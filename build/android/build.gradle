buildscript {
    repositories {
        maven { url 'https://maven.google.com' }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.google.com' }
        jcenter()
    }
}

apply plugin: 'com.android.application'
android {
	compileSdkVersion 28
	buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId 'mobi.MultiCraft'
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 114
    }
	Properties props = new Properties()
	props.load(new FileInputStream(file("local.properties")))

	if (props.getProperty("keystore") != null) {
		signingConfigs {
			release {
				storeFile file(props["keystore"])
				storePassword props["keystore.password"]
				keyAlias props["key"]
				keyPassword props["key.password"]
			}
		}

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
				signingConfig signingConfigs.release
			}
		}
	}
// for multiple APKs
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "x86"
            //include 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }
}

// build multiple APKs for all ABI
ext.abiCodes = ['armeabi-v7a': 0, 'x86': 1]
//ext.abiCodes = ['armeabi-v7a': 0, 'arm64-v8a': 1, 'x86': 2]
import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def baseAbiVersionCode =
                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
        if (baseAbiVersionCode != null) {
            output.versionCodeOverride =
                    baseAbiVersionCode + variant.versionCode
        }
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
}
